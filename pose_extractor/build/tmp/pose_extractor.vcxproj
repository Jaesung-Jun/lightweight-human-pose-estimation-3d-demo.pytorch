<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{AF5F9C6B-858F-3F1B-AAE9-8379F4DD476F}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>pose_extractor</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pose_extractor.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pose_extractor</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">pose_extractor.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">pose_extractor</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">pose_extractor.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">pose_extractor</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">pose_extractor.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">pose_extractor</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.pyd</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR="Debug";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreLinkEvent>
      <Message>Auto build dll exports</Message>
      <Command>setlocal
cd "F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp"
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
"D:\Installed Programs (D Drive)\bin\cmake.exe" -E __create_def "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Debug/exports.def" "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Debug//objects.txt"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>F:\Anaconda\envs\XNect\libs\python35.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440d.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/Debug/pose_extractor.lib</ImportLibrary>
      <ModuleDefinitionFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Debug/exports.def</ModuleDefinitionFile>
      <ProgramDataBaseFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/Debug/pose_extractor.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreLinkEvent>
      <Message>Auto build dll exports</Message>
      <Command>setlocal
cd "F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp"
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
"D:\Installed Programs (D Drive)\bin\cmake.exe" -E __create_def "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Release/exports.def" "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Release//objects.txt"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>F:\Anaconda\envs\XNect\libs\python35.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.lib</ImportLibrary>
      <ModuleDefinitionFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/Release/exports.def</ModuleDefinitionFile>
      <ProgramDataBaseFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/pose_extractor.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreLinkEvent>
      <Message>Auto build dll exports</Message>
      <Command>setlocal
cd "F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp"
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
"D:\Installed Programs (D Drive)\bin\cmake.exe" -E __create_def "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/MinSizeRel/exports.def" "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/MinSizeRel//objects.txt"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>F:\Anaconda\envs\XNect\libs\python35.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/MinSizeRel/pose_extractor.lib</ImportLibrary>
      <ModuleDefinitionFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/MinSizeRel/exports.def</ModuleDefinitionFile>
      <ProgramDataBaseFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/MinSizeRel/pose_extractor.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";pose_extractor_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src;F:\Anaconda\envs\XNect\include;F:\Anaconda\envs\XNect\lib\site-packages\numpy\core\include;F:\OpenCV\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreLinkEvent>
      <Message>Auto build dll exports</Message>
      <Command>setlocal
cd "F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp"
if %errorlevel% neq 0 goto :cmEnd
F:
if %errorlevel% neq 0 goto :cmEnd
"D:\Installed Programs (D Drive)\bin\cmake.exe" -E __create_def "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/RelWithDebInfo/exports.def" "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/RelWithDebInfo//objects.txt"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>F:\Anaconda\envs\XNect\libs\python35.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;F:\OpenCV\opencv\build\x64\vc14\lib\opencv_world440.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/RelWithDebInfo/pose_extractor.lib</ImportLibrary>
      <ModuleDefinitionFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/pose_extractor.dir/RelWithDebInfo/exports.def</ModuleDefinitionFile>
      <ProgramDataBaseFile>F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/RelWithDebInfo/pose_extractor.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Installed Programs (D Drive)\bin\cmake.exe" "-SF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor" "-BF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp" --check-stamp-file "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeFindFrameworks.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonInterp.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonLibs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\SelectLibraryConfigurations.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCXXCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeRCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeSystem.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig-version.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Installed Programs (D Drive)\bin\cmake.exe" "-SF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor" "-BF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp" --check-stamp-file "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeFindFrameworks.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonInterp.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonLibs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\SelectLibraryConfigurations.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCXXCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeRCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeSystem.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig-version.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Installed Programs (D Drive)\bin\cmake.exe" "-SF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor" "-BF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp" --check-stamp-file "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeFindFrameworks.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonInterp.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonLibs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\SelectLibraryConfigurations.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCXXCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeRCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeSystem.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig-version.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Installed Programs (D Drive)\bin\cmake.exe" "-SF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor" "-BF:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp" --check-stamp-file "F:/Github Repos/lightweight-human-pose-estimation-3d-demo.pytorch/pose_extractor/build/tmp/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeFindFrameworks.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonInterp.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\FindPythonLibs.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Installed Programs (D Drive)\share\cmake-3.18\Modules\SelectLibraryConfigurations.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeCXXCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeRCCompiler.cmake;F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\3.18.0\CMakeSystem.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig-version.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;F:\OpenCV\opencv\build\x64\vc14\lib\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\wrapper.cpp" />
    <ClInclude Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\extract_poses.hpp" />
    <ClCompile Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\extract_poses.cpp" />
    <ClInclude Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\human_pose.hpp" />
    <ClCompile Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\human_pose.cpp" />
    <ClInclude Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\peak.hpp" />
    <ClCompile Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\src\peak.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="F:\Github Repos\lightweight-human-pose-estimation-3d-demo.pytorch\pose_extractor\build\tmp\ZERO_CHECK.vcxproj">
      <Project>{E302C29E-5B5E-364C-B02D-35D3B71A8C80}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>